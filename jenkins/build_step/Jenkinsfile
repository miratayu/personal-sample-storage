import groovy.json.JsonOutput

pipeline {
  agent any

  stages {
    stage('Run child job') {
      steps {
        script {
          def test_contents_file = "${WORKSPACE}/jenkins/build_step/test_contents.json"
          test_contents = readJSON file: test_contents_file
          archiveArtifacts artifacts: "**/test_contents.json", allowEmptyArchive: true

          def contents_list = test_contents.contents_list
          contents_list.each { contents_name_as_key, contents_details ->
            echo "Build ${contents_name_as_key}"
            catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') {
              def other_job = build(job: "child_job",
                parameters: [
                  string(name: "STRING", value: contents_details.string),
                  text(name: "TEST_CONFIG", value: contents_details.test_config.toString()),
                  booleanParam(name: "BOOLEAN", value: contents_details.toggle),
                  string(name: "CHOICE", value: contents_details.choice)
                ]
              )
            }
          }
        }
      }
    }
  }
  post {
    cleanup {
      cleanWs()
    }
  }
}
