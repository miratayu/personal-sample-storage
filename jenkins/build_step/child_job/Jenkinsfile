import groovy.json.JsonOutput

pipeline {
  agent any

  parameters {
    string(name: 'STRING', defaultValue: 'string', description: 'string')
    text(name: 'TEST_CONFIG', defaultValue: '', description: 'test_config.json')
    booleanParam(name: 'BOOLEAN', defaultValue: true, description: 'boolean')
    choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'choice')
  }

  stages {
    stage('execute') {
      steps {
        script {
          echo 'execute'
          def test_config_file = "${WORKSPACE}/jenkins/build_step/child_job/test_config.json"
          if (params.TEST_CONFIG != '') {
            writeFile(file: test_config_file, text: params.TEST_CONFIG)
          }
          test_config = readJSON file: test_config_file
          archiveArtifacts artifacts: "**/test_config.json", allowEmptyArchive: true
          if (test_config.title) {
            echo "title: ${test_config.title}"
          }
          if (test_config?.a) {
            echo "a: ${test_config?.a}"
          }
          if (!test_config?.add) {
            test_config.add = [:]
          }
          if (!test_config?.add?.abc) {
            test_config.add.abc = "test_abc"
          }

          echo "test_config: ${test_config}"

          def run_commands = load "jenkins/build_step/child_job/run_commands.groovy"
          echo "run_commands: ${run_commands}"
          run_commands.run(test_config)
        }
      }
    }
  }
  post {
    success {
      cleanWs()
    }
  }
}
