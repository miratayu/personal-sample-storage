import groovy.json.JsonOutput

pipeline {
  agent any

  environment {
    fileName = 'output.json'
    logName = 'test.log'
    summaryName = 'summary.txt'
  }

  stages {
    stage('hello') {
      steps {
        script {
          def read_json = readJSON file: 'jenkins/contents_list.json'
          def result = add_json_contents(read_json['list'])
          writeFile(file: fileName, text: JsonOutput.toJson('results': result))

          def test_text = "abc\ndef\nghi\nabc\ndef\nAAA\nabc\ndef\nBBB\n"
          echo "test_text: ${test_text.class}"
          echo "test_text: ${test_text.indexOf("\n")}"
          writeFile(file: logName, text: test_text)

          def test_line = test_text.split("\n")
          echo "test_line: ${test_line}"
          def result_line = ""
          for (def i = 0; i < test_line.size(); i++) {
            if (test_line[i].contains("def")) {
                result_line += test_line[i+1] + "\n"
            }
          }
          echo "result_line: ${result_line}"
          writeFile(file: summaryName, text: result_line)
        }
      }
    }
    stage('archive artifacts') {
      steps {
        archiveArtifacts fileName
        archiveArtifacts logName
        archiveArtifacts summaryName
      }
    }
  }
  post {
    success {
      cleanWs()
    }
  }
}

def add_json_contents(contents) {
  def added_contents = [:]
  contents.each { key, value ->
    added_contents[key] = value['value']
  }
  return added_contents
}
